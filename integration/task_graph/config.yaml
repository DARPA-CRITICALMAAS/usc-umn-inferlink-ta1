# all paths are relative to the container

config:
    MAP_NAME: "{JOB_NAME}"
    DATA_DIR: "{CONTAINER_DATA_DIR}"
    JOB_DIR: "{CONTAINER_JOB_DIR}"
    HOST_DATA_DIR: "{HOST_DATA_DIR}"
    HOST_JOB_DIR: "{HOST_JOB_DIR}"
    OPENAI_API_KEY: "{OPENAI_API_KEY}"

# 1: uses nothing
# segmentation/map_area_segmentation - Fandel
map_segment:
    config:
        docker_image: inferlink/ta1_map_segment
        make_dirs: ["{config.HOST_JOB_DIR}/map_segment/output", "{config.HOST_JOB_DIR}/map_segment/temp"]
    options:
        # inputs:
        input_path: "{config.DATA_DIR}/inputs/{config.MAP_NAME}/{config.MAP_NAME}.tif"
        # outputs:
        binary_output_path: "{config.JOB_DIR}/map_segment/output/{config.MAP_NAME}.tif"
        json_output_path: "{config.JOB_DIR}/map_segment/output/{config.MAP_NAME}.geojson"
        # misc:
        intermediate_dir: "{config.JOB_DIR}/map_segment/temp"
        version: 0
        log: "{config.JOB_DIR}/map_segment/temp/log_file.txt"

# 2: uses nothing
# integration/legend_segment - Uncharted
legend_segment:
    config:
        docker_image: inferlink/ta1_legend_segment
        make_dirs: ["{config.HOST_JOB_DIR}/legend_segment/output"]
    options:
        # inputs:
        input: "{config.DATA_DIR}/inputs/{config.MAP_NAME}"
        # outputs: {NAME}_map_segmentation.json
        output: "{config.JOB_DIR}/legend_segment/output"
        # misc:
        model: "{config.DATA_DIR}/legend_segment/layoutlmv3_20230929"

# 3: uses 6 and 2
# segmentation/legend_item_segmentation - Fandel
legend_item_segment:
    config:
        docker_image: inferlink/ta1_legend_item_segment
        make_dirs: ["{config.HOST_JOB_DIR}/legend_item_segment/output", "{config.HOST_JOB_DIR}/legend_item_segment/temp"]
    options:
        # inputs:
        input_image: "{config.DATA_DIR}/inputs/{config.MAP_NAME}/{config.MAP_NAME}.tif"
        path_to_mapkurator_output: "{config.JOB_DIR}/text_spotting/output/{config.MAP_NAME}.geojson"
        ###path_to_mapkurator_output: "{config.DATA_DIR}/references/legend_item_segmentation/Example_Input/{config.MAP_NAME}.geojson"
        input_legend_segmentation: "{config.DATA_DIR}/legend_item_segment/ch2_validation_evaluation_labels_coco.json"
        # outputs:
        output_dir: "{config.JOB_DIR}/legend_item_segment/output"
        # misc:
        preprocessing_for_cropping: True
        postprocessing_for_crs: True
        path_to_intermediate: "{config.JOB_DIR}/legend_item_segment/temp"
        version: 0
        log: "{config.JOB_DIR}/legend_item_segment/temp/log_file.txt"

# 4: uses 2 and 3
# segmentation/legend_item_description_segment - Weiwei
legend_item_description:
    config:
        docker_image: inferlink/ta1_legend_item_description
        make_dirs: [
            "{config.HOST_JOB_DIR}/legend_item_description/output",
            "{config.HOST_JOB_DIR}/legend_item_description/temp",
            "{config.HOST_JOB_DIR}/legend_item_description/temp/gpt4_input_dir",
            "{config.HOST_JOB_DIR}/legend_item_description/temp/gpt4_temp_dir",
        ]
    options:
        # inputs:
        map_dir: "{config.DATA_DIR}/inputs/{config.MAP_NAME}"
        map_name: "{config.MAP_NAME}"
        legend_json_path: "{config.JOB_DIR}/legend_segment/output"
        symbol_json_dir: "{config.JOB_DIR}/legend_item_segment/output"
        # outputs:
        gpt4_output_dir: "{config.JOB_DIR}/legend_item_description/output"
        # misc:
        gpt4_input_dir: "{config.JOB_DIR}/legend_item_description/temp/gpt4_input_dir"
        gpt4_intermediate_dir: "{config.JOB_DIR}/legend_item_description/temp/gpt4_temp_dir"

# 5: uses nothing
# system/image_crop - Weiwei
map_crop:
    config:
        docker_image: inferlink/ta1_map_crop
        make_dirs: ["{config.HOST_JOB_DIR}/map_crop/output"]
    options:
        # inputs:
        input_dir: "{config.DATA_DIR}/inputs/{config.MAP_NAME}"
        map_name: "{config.MAP_NAME}"
        # outputs:
        #    The folder name convention is {map_name}_g{patch_size}_s{strides}.
        #    In the folder, the image name convention is {map_name}_{row}_{col}.png
        output_dir: "{config.JOB_DIR}/map_crop/output"
        # misc
        patch_sizes: [1000, 256]
        strides: [100, 100]

# 6: uses 5
# integration/text_spotting - Weiwei (Zekun)
text_spotting:
    config:
        docker_image: inferlink/ta1_text_spotting
        make_dirs: ["{config.HOST_JOB_DIR}/text_spotting/output", "{config.HOST_JOB_DIR}/text_spotting/temp"]
        user: root
    options:
        # inputs:
        input_dir_path: "{config.JOB_DIR}/map_crop/output/{config.MAP_NAME}_g1000_s100"
        # outputs:
        output_folder: "{config.JOB_DIR}/text_spotting/output"
        # misc:
        model_weight_path: "{config.DATA_DIR}/text_spotting/model_final.pth"
        spotter_config: "{config.DATA_DIR}/text_spotting/SynthMap_Polygon.yaml"
        map_kurator_system_dir: /ta1/dev/usc-umn-inferlink-ta1/system/mapkurator/mapkurator-system
        text_spotting_model_dir: /ta1/dev/usc-umn-inferlink-ta1/system/mapkurator/spotter_v2/PALEJUN
        expt_name: mapKurator_test
        module_text_spotting: ""
        spotter_model: spotter_v2
        spotter_expt_name: test
        module_img_geojson: ""

# 7: uses 4 and 5
# line - Weiwei
line_extract:
    config:
        docker_image: inferlink/ta1_line_extract
        make_dirs: ["{config.HOST_JOB_DIR}/line_extract/output", "{config.HOST_JOB_DIR}/line_extract/temp"]
    options:
        # inputs:
        map_legend_json: "{config.JOB_DIR}/legend_item_description/outputs"
        cropped_image_dir: "{config.JOB_DIR}/map_crop/output/{config.MAP_NAME}_g1000_s100"
        # outputs:
        prediction_dir: "{config.JOB_DIR}/line_extract/output"
        # misc:
        config: "{config.DATA_DIR}/inputs/line_extract/usgs_railroads.yaml"
        map_name: "{config.MAP_NAME}"
        cuda_visible_device: 0
        predict_raster: True
        predict_vector: False
        trained_model_dir: "{config.DATA_DIR}/line_extract/trained_weights"

# 8: uses 3 and 4
# polygon - Fandel
polygon_extract:
    config:
        docker_image: inferlink/ta1_polygon_extract
        make_dirs: ["{config.HOST_JOB_DIR}/polygon_extract/output", "{config.HOST_JOB_DIR}/polygon_extract/temp"]
    options:
        # inputs:
        path_to_legend_solution: "{config.JOB_DIR}/legend_item_segment/outputs/{config.MAP_NAME}_PolygonType.geojson"
        path_to_tif: "{config.DATA_DIR}/inputs/{config.MAP_NAME}/{config.MAP_NAME}.tif"
        path_to_json: "{config.JOB_DIR}/legend_item_description/output/{config.MAP_NAME}.json"
        # outputs:
        dir_to_integrated_output:  "{config.JOB_DIR}/polygon_extract/output"
        # misc:
        version: 0
        log: "{config.JOB_DIR}/polygon_extract/output/log_file.txt"

