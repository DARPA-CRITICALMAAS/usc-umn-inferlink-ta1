# This YAML file allows for a few cases of variable substitution:
#   $MAP_NAME --> the value of `--map-name NAME`
#   $INPUT_DIR --> the value of {container.input_dir}
#   $OUTPUT_DIR --> the value of {container.output_dir} + `--job-name`
#   $TEMP_DIR --> the value of {container.temp_dir} + `--job-name`

host:
    input_dir: /home/ubuntu/dev/ta1_integration_inputs
    output_dir: /home/ubuntu/dev/ta1-output
    temp_dir: /home/ubuntu/dev/ta1-temp


container:
    input_dir: /ta1/input
    output_dir: /ta1/output
    temp_dir: /ta1/temp


# 2
# where: integration/legend_segment
# by: Uncharted
# requires: (nothing)
# produces: X_map_segmentation.json
legend_segment:
    # inputs:
    input: $INPUT_DIR/maps/$MAP_NAME
    # outputs:
    output: $OUTPUT_DIR/legend_segment
    # misc:
    model: $INPUT_DIR/legend_segment/layoutlmv3_20230929


# 3
# where: segmentation/legend_item_segmentation
# by: Fandel
# requires: 6
# produces: geojson
legend_item_segment:
    # inputs:
    input_image: $INPUT_DIR/maps/$MAP_NAME/$MAP_NAME.tif
    path_to_mapkurator_output: $OUTPUT_DIR/text_spotting/mapKurator_test/stitch/test/$MAP_NAME.geojson
    input_legend_segmentation: $INPUT_DIR/legend_item_segment/ch2_validation_evaluation_labels_coco.json
    # outputs:
    output_dir: $OUTPUT_DIR/legend_item_segment
    # misc:
    #preprocessing_for_cropping: True
    postprocessing_for_crs: True
    competition_custom: True
    path_to_intermediate: $TEMP_DIR/legend_item_segment
    version: 1
    log: $OUTPUT_DIR/legend_item_segment/log_file.txt


# 4
# where: segmentation/legend_item_description_segment
# by: Weiwei
# requires: 2, 3
# produces: json
legend_item_description:
    # inputs:
    map_dir: $INPUT_DIR/maps/$MAP_NAME
    map_name: $MAP_NAME
    legend_json_path: $OUTPUT_DIR/legend_segment
    ###symbol_json_dir: $OUTPUT_DIR/legend_item_segment
    symbol_json_dir: $INPUT_DIR/maps/$MAP_NAME/legend_item_segment
    # outputs:
    gpt4_output_dir: $OUTPUT_DIR/legend_item_description
    # misc:
    gpt4_input_dir: $TEMP_DIR/legend_item_description/gpt4_input_dir
    gpt4_intermediate_dir: $TEMP_DIR/legend_item_description/gpt4_temp_dir


# 5
# where: system/image_crop
# by: Weiwei
# requires: (none)
# produces: PNGs
map_crop:
    # inputs:
    input_dir: $INPUT_DIR/maps/$MAP_NAME
    map_name: $MAP_NAME
    # outputs:
    output_dir: $OUTPUT_DIR/map_crop
    # misc:
    patch_sizes: [1000, 256]
    strides: [1000, 256]


# 6
# where: integration/text_spotting
# by: Weiwei (Zekun)
# requires: 5
# produced: geojson
text_spotting:
    # inputs:
    input_dir_path: $OUTPUT_DIR/map_crop/$MAP_NAME_g1000_s1000
    # outputs:
    output_folder: $OUTPUT_DIR/text_spotting
    # misc:
    model_weight_path: /home/spotter_v2/PALEJUN/weights/synthmap_pretrain/model_final.pth
    spotter_config: /home/spotter_v2/PALEJUN/configs/PALEJUN/SynthMap/SynthMap_Polygon.yaml
    map_kurator_system_dir: /home/mapkurator-system
    text_spotting_model_dir: /home/spotter_v2/PALEJUN
    expt_name: mapKurator_test
    module_text_spotting: ""
    spotter_model: spotter_v2
    spotter_expt_name: test
    module_img_geojson: ""


# 7
# where: line
# by: Weiwei
# requires: 4, 5
# produces: geojson
line_extract:
    # inputs:
    map_legend_json: $OUTPUT_DIR/legend_item_description
    cropped_image_dir: $OUTPUT_DIR/map_crop/$MAP_NAME_g256_s256"
    # outputs:
    prediction_dir: $OUTPUT_DIR/line_extract
    # misc:
    config: $INPUT_DIR/line_extract/usgs_railroads.yaml
    map_name: $MAP_NAME
    cuda_visible_device: 0
    predict_raster: ""
    # predict_vector: ""
    trained_model_dir: $INPUT_DIR/line_extract/trained_weights


# 8: uses 3 and 4
# where: polygon
# by: Fandel
# requires: 3
# produces: geojson?
polygon_extract:
    # inputs:
    path_to_legend_solution: $OUTPUT_DIR/legend_item_segment/$MAP_NAME_PolygonType.geojson
    path_to_tif: $INPUT_DIR/maps/$MAP_NAME/$MAP_NAME.tif
    path_to_json: $OUTPUT_DIR/legend_item_segment/$MAP_NAME_PolygonType_internal.json
    # outputs:
    dir_to_integrated_output: $OUTPUT_DIR/polygon_extract
    # misc:
    version: 0
    log: $OUTPUT_DIR/polygon_extract/log_file.txt"
    threads: 1


# 9
# where: point
# by: Leeje
# requires: 4, 5
# produces: TIF, geojson
point_extract:
    # inputs:
    # outputs:
    # misc:
    version: ""


# 10
# where: georeference
# by: Weiwei
# requires: (none)
# produces: json
georeference:
    # inputs:
    # outputs:
    # misc:
    version: ""
